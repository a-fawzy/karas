<?php

namespace Objects\UserBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * SocialAccountsRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class SocialAccountsRepository extends EntityRepository {

    /**
     * this function will get the user object and his roles by the twitter id
     * @author Mahmoud
     * @param integer $twitterId the user social account twitter id
     * @return null|\Objects\UserBundle\Entity\User
     */
    public function getUserWithRolesByTwitterId($twitterId) {
        $query = $this->getEntityManager()
                ->createQuery('
                     SELECT u, s, r
                     FROM Objects\UserBundle\Entity\User u
                     JOIN u.socialAccounts s
                     LEFT JOIN u.userRoles r
                     WHERE s.twitterId = :twitterId
                    ');
        $query->setParameter('twitterId', $twitterId);
        try {
            $user = $query->getSingleResult();
        } catch (\Exception $e) {
            $user = NULL;
        }
        return $user;
    }

    /**
     * this function will get the social accounts with the user object and his roles by the facebook id
     * @author Mahmoud
     * @param integer $facebookId the user social account facebook id
     * @return null|\Objects\UserBundle\Entity\SocialAccounts
     */
    public function getUserWithRolesByFaceBookId($facebookId) {
        $query = $this->getEntityManager()
                ->createQuery('
                     SELECT s, u, r
                     FROM Objects\UserBundle\Entity\SocialAccounts s
                     JOIN s.user u
                     LEFT JOIN u.userRoles r
                     WHERE s.facebookId = :facebookId
                    ');
        $query->setParameter('facebookId', $facebookId);
        try {
            $socialAccounts = $query->getSingleResult();
        } catch (\Exception $e) {
            $socialAccounts = NULL;
        }
        return $socialAccounts;
    }

}